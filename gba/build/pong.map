Archive member included to satisfy reference by file (symbol)

/opt/devkitpro/libtonc/lib/libtonc.a(tonc_bmp16.o)
                              main.o (bmp16_line)
/opt/devkitpro/libtonc/lib/libtonc.a(tonc_input.o)
                              main.o (key_poll)
/opt/devkitpro/libtonc/lib/libtonc.a(tonc_bios.o)
                              /opt/devkitpro/libtonc/lib/libtonc.a(tonc_input.o) (VBlankIntrWait)
/opt/devkitpro/libtonc/lib/libtonc.a(tonc_memset.o)
                              main.o (memset32)
/opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/../../../../arm-none-eabi/lib/thumb/libg.a(lib_a-init.o)
                              /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/../../../../arm-none-eabi/lib/thumb/gba_crt0.o (__libc_init_array)
/opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/../../../../arm-none-eabi/lib/thumb/libsysbase.a(malloc_vars.o)
                              /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/../../../../arm-none-eabi/lib/thumb/gba_crt0.o (fake_heap_end)

Discarded input sections

 .text          0x0000000000000000        0x0 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/../../../../arm-none-eabi/lib/thumb/gba_crt0.o
 .data          0x0000000000000000        0x0 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/../../../../arm-none-eabi/lib/thumb/gba_crt0.o
 .bss           0x0000000000000000        0x0 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/../../../../arm-none-eabi/lib/thumb/gba_crt0.o
 .text          0x0000000000000000        0x0 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crti.o
 .data          0x0000000000000000        0x0 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crti.o
 .bss           0x0000000000000000        0x0 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crti.o
 .text          0x0000000000000000        0x0 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crtbegin.o
 .data          0x0000000000000000        0x0 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crtbegin.o
 .bss           0x0000000000000000        0x0 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crtbegin.o
 .rodata.all_implied_fbits
                0x0000000000000000       0x24 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crtbegin.o
 .data.__dso_handle
                0x0000000000000000        0x4 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crtbegin.o
 .text          0x0000000000000000      0x10c main.o
 .data          0x0000000000000000        0x0 main.o
 .bss           0x0000000000000000        0x0 main.o
 .data          0x0000000000000000        0x0 /opt/devkitpro/libtonc/lib/libtonc.a(tonc_bmp16.o)
 .bss           0x0000000000000000        0x0 /opt/devkitpro/libtonc/lib/libtonc.a(tonc_bmp16.o)
 .data          0x0000000000000000        0x0 /opt/devkitpro/libtonc/lib/libtonc.a(tonc_bios.o)
 .bss           0x0000000000000000        0x0 /opt/devkitpro/libtonc/lib/libtonc.a(tonc_bios.o)
 .data          0x0000000000000000        0x0 /opt/devkitpro/libtonc/lib/libtonc.a(tonc_memset.o)
 .bss           0x0000000000000000        0x0 /opt/devkitpro/libtonc/lib/libtonc.a(tonc_memset.o)
 .text          0x0000000000000000        0x0 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/../../../../arm-none-eabi/lib/thumb/libg.a(lib_a-init.o)
 .data          0x0000000000000000        0x0 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/../../../../arm-none-eabi/lib/thumb/libg.a(lib_a-init.o)
 .bss           0x0000000000000000        0x0 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/../../../../arm-none-eabi/lib/thumb/libg.a(lib_a-init.o)
 .text          0x0000000000000000        0x0 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/../../../../arm-none-eabi/lib/thumb/libsysbase.a(malloc_vars.o)
 .data          0x0000000000000000        0x0 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/../../../../arm-none-eabi/lib/thumb/libsysbase.a(malloc_vars.o)
 .bss           0x0000000000000000        0x0 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/../../../../arm-none-eabi/lib/thumb/libsysbase.a(malloc_vars.o)
 .bss.fake_heap_start
                0x0000000000000000        0x4 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/../../../../arm-none-eabi/lib/thumb/libsysbase.a(malloc_vars.o)
 .text          0x0000000000000000        0x0 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crtend.o
 .data          0x0000000000000000        0x0 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crtend.o
 .bss           0x0000000000000000        0x0 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crtend.o
 .rodata.all_implied_fbits
                0x0000000000000000       0x24 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crtend.o
 .text          0x0000000000000000        0x0 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crtn.o
 .data          0x0000000000000000        0x0 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crtn.o
 .bss           0x0000000000000000        0x0 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crtn.o

Memory Configuration

Name             Origin             Length             Attributes
rom              0x0000000008000000 0x0000000002000000
iwram            0x0000000003000000 0x0000000000008000
ewram            0x0000000002000000 0x0000000000040000
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0x0000000008000000                __text_start = ORIGIN (rom)
                0x0000000002040000                __eheap_end = (ORIGIN (ewram) + LENGTH (ewram))
                0x0000000003000000                __iwram_start = ORIGIN (iwram)
                0x0000000003008000                __iwram_top = (ORIGIN (iwram) + LENGTH (iwram))
                0x0000000003007fa0                __sp_irq = (__iwram_top - 0x60)
                0x0000000003007f00                __sp_usr = (__sp_irq - 0xa0)
                0x0000000003007ff8                __irq_flags = 0x3007ff8
                0x0000000008000000                . = __text_start

.crt0           0x0000000008000000      0x210
 *(.crt0)
 .crt0          0x0000000008000000      0x210 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/../../../../arm-none-eabi/lib/thumb/gba_crt0.o
                0x0000000008000000                _start
                0x00000000080000c4                __boot_method
                0x00000000080000c5                __slave_number
                0x00000000080000e0                start_vector
                0x0000000008000210                . = ALIGN (0x4)

.init           0x0000000008000210        0xc
 *(SORT_NONE(.init))
 .init          0x0000000008000210        0x4 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crti.o
                0x0000000008000210                _init
 .init          0x0000000008000214        0x8 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crtn.o

.plt            0x000000000800021c        0x0
 *(.plt)
                0x000000000800021c                . = ALIGN (0x4)

.text           0x000000000800021c      0x5bc
 *(EXCLUDE_FILE(*.iwram*) .text*)
 .text.__do_global_dtors_aux
                0x000000000800021c       0x2c /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crtbegin.o
 .text.frame_dummy
                0x0000000008000248       0x24 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crtbegin.o
 .text.startup  0x000000000800026c      0x18c main.o
                0x000000000800026c                main
 .text          0x00000000080003f8      0x21c /opt/devkitpro/libtonc/lib/libtonc.a(tonc_bmp16.o)
                0x00000000080003f8                bmp16_plot
                0x000000000800040c                bmp16_hline
                0x000000000800043c                bmp16_vline
                0x000000000800047c                bmp16_line
                0x0000000008000538                bmp16_rect
                0x0000000008000594                bmp16_frame
 .text          0x0000000008000614       0xa8 /opt/devkitpro/libtonc/lib/libtonc.a(tonc_input.o)
                0x0000000008000614                key_poll
                0x0000000008000668                key_wait_till_hit
                0x000000000800068c                key_repeat
                0x0000000008000698                key_repeat_mask
                0x00000000080006a8                key_repeat_limits
 .text          0x00000000080006bc       0x8c /opt/devkitpro/libtonc/lib/libtonc.a(tonc_bios.o)
                0x00000000080006bc                SoftReset
                0x00000000080006c0                RegisterRamReset
                0x00000000080006c4                Halt
                0x00000000080006c8                Stop
                0x00000000080006cc                IntrWait
                0x00000000080006d0                VBlankIntrWait
                0x00000000080006d4                Div
                0x00000000080006d8                DivArm
                0x00000000080006dc                Sqrt
                0x00000000080006e0                ArcTan
                0x00000000080006e4                ArcTan2
                0x00000000080006e8                CpuSet
                0x00000000080006ec                CpuFastSet
                0x00000000080006f0                BiosCheckSum
                0x00000000080006f4                BgAffineSet
                0x00000000080006f8                ObjAffineSet
                0x00000000080006fc                BitUnPack
                0x0000000008000700                LZ77UnCompWram
                0x0000000008000704                LZ77UnCompVram
                0x0000000008000708                HuffUnComp
                0x000000000800070c                RLUnCompWram
                0x0000000008000710                RLUnCompVram
                0x0000000008000714                Diff8bitUnFilterWram
                0x0000000008000718                Diff8bitUnFilterVram
                0x000000000800071c                Diff16bitUnFilter
                0x0000000008000720                SoundBias
                0x0000000008000724                SoundDriverInit
                0x0000000008000728                SoundDriverMode
                0x000000000800072c                SoundDriverMain
                0x0000000008000730                SoundDriverVSync
                0x0000000008000734                SoundChannelClear
                0x0000000008000738                MidiKey2Freq
                0x000000000800073c                MultiBoot
                0x0000000008000740                SoundDriverVSyncOff
                0x0000000008000744                SoundDriverVSyncOn
 .text          0x0000000008000748       0x3c /opt/devkitpro/libtonc/lib/libtonc.a(tonc_memset.o)
                0x0000000008000748                memset16
 .text.__libc_init_array
                0x0000000008000784       0x54 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/../../../../arm-none-eabi/lib/thumb/libg.a(lib_a-init.o)
                0x0000000008000784                __libc_init_array
 *(.gnu.linkonce.t.*)
 *(.text.*personality*)
 *(.gnu.warning)
 *(.glue_7t)
 .glue_7t       0x00000000080007d8        0x0 linker stubs
 *(.glue_7)
 .glue_7        0x00000000080007d8        0x0 linker stubs
 *(.vfp11_veneer)
 .vfp11_veneer  0x00000000080007d8        0x0 linker stubs
                0x00000000080007d8                . = ALIGN (0x4)
                0x00000000080007d8                __text_end = .

.v4_bx          0x00000000080007d8        0x0
 .v4_bx         0x00000000080007d8        0x0 linker stubs

.iplt           0x00000000080007d8        0x0
 .iplt          0x00000000080007d8        0x0 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/../../../../arm-none-eabi/lib/thumb/gba_crt0.o

.fini           0x00000000080007d8        0xc
 *(.fini)
 .fini          0x00000000080007d8        0x4 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crti.o
                0x00000000080007d8                _fini
 .fini          0x00000000080007dc        0x8 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crtn.o
                0x00000000080007e4                . = ALIGN (0x4)

.rodata         0x00000000080007e4        0x0
 *(.rodata)
 *all.rodata*(*)
 *(.roda)
 *(.rodata.*)
 *(.gnu.linkonce.r*)
                0x00000000080007e4                . = ALIGN (0x4)

.ARM.extab
 *(.ARM.extab* .gnu.linkonce.armextab.*)
                0x00000000080007e4                __exidx_start = .

.ARM.exidx
 *(.ARM.exidx* .gnu.linkonce.armexidx.*)
                0x00000000080007e4                __exidx_end = .

.ctors          0x00000000080007e4        0x0
 *crtbegin.o(.ctors)
 *(EXCLUDE_FILE(*crtend.o) .ctors)
 *(SORT_BY_NAME(.ctors.*))
 *(.ctors)
                0x00000000080007e4                . = ALIGN (0x4)

.dtors          0x00000000080007e4        0x0
 *crtbegin.o(.dtors)
 *(EXCLUDE_FILE(*crtend.o) .dtors)
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)
                0x00000000080007e4                . = ALIGN (0x4)

.eh_frame       0x00000000080007e4        0x4
 *(.eh_frame)
 .eh_frame      0x00000000080007e4        0x0 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crtbegin.o
 .eh_frame      0x00000000080007e4        0x4 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crtend.o
                0x00000000080007e8                . = ALIGN (0x4)

.gcc_except_table
                0x00000000080007e8        0x0
 *(.gcc_except_table)
                0x00000000080007e8                . = ALIGN (0x4)
                0x00000000080007e8                __iwram_lma = .

.iwram          0x0000000003000000       0x4c load address 0x00000000080007e8
                0x0000000003000000                __iwram_start__ = ABSOLUTE (.)
 *(.iwram .iwram*)
 .iwram         0x0000000003000000       0x4c /opt/devkitpro/libtonc/lib/libtonc.a(tonc_memset.o)
                0x0000000003000000                memset32
 *iwram.*(.text* .data*)
                0x000000000300004c                . = ALIGN (0x4)
                0x000000000300004c                __iwram_end__ = ABSOLUTE (.)
                0x0000000008000834                __data_lma = (__iwram_lma + SIZEOF (.iwram))

.bss            0x000000000300004c       0x24
                0x000000000300004c                __bss_start = ABSOLUTE (.)
                0x000000000300004c                __bss_start__ = ABSOLUTE (.)
 *(.dynbss)
 *(.gnu.linkonce.b*)
 *(.bss*)
 .bss.completed.1
                0x000000000300004c        0x1 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crtbegin.o
 *fill*         0x000000000300004d        0x3 
 .bss.object.0  0x0000000003000050       0x18 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crtbegin.o
 .bss           0x0000000003000068        0x4 /opt/devkitpro/libtonc/lib/libtonc.a(tonc_input.o)
                0x0000000003000068                __key_curr
                0x000000000300006a                __key_prev
 .bss.fake_heap_end
                0x000000000300006c        0x4 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/../../../../arm-none-eabi/lib/thumb/libsysbase.a(malloc_vars.o)
                0x000000000300006c                fake_heap_end
 *(COMMON)
                0x0000000003000070                . = ALIGN (0x4)
                0x0000000003000070                __bss_end__ = ABSOLUTE (.)

.data           0x0000000003000070        0x8 load address 0x0000000008000834
                0x0000000003000070                __data_start__ = ABSOLUTE (.)
 *(.data*)
 .data          0x0000000003000070        0x8 /opt/devkitpro/libtonc/lib/libtonc.a(tonc_input.o)
                0x0000000003000070                __key_rpt
 *(.gnu.linkonce.d*)
                0x0000000003000078                . = ALIGN (0x4)
                0x000000000800083c                __preinit_lma = (__data_lma + SIZEOF (.data))

.igot.plt       0x0000000003000078        0x0 load address 0x000000000800083c
 .igot.plt      0x0000000003000078        0x0 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/../../../../arm-none-eabi/lib/thumb/gba_crt0.o

.preinit_array  0x0000000003000078        0x0 load address 0x000000000800083c
                0x0000000003000078                __preinit_array_start = ABSOLUTE (.)
 *(.preinit_array)
                0x0000000003000078                __preinit_array_end = ABSOLUTE (.)
                0x000000000800083c                __init_lma = (__preinit_lma + SIZEOF (.preinit_array))

.init_array     0x0000000003000078        0x4 load address 0x000000000800083c
                0x0000000003000078                __init_array_start = ABSOLUTE (.)
 *(SORT_BY_NAME(.init_array.*))
 *(.init_array)
 .init_array    0x0000000003000078        0x4 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crtbegin.o
                0x000000000300007c                __init_array_end = ABSOLUTE (.)
                0x0000000008000840                __fini_lma = (__init_lma + SIZEOF (.init_array))

.fini_array     0x000000000300007c        0x4 load address 0x0000000008000840
                0x000000000300007c                __fini_array_start = ABSOLUTE (.)
 *(SORT_BY_NAME(.fini_array.*))
 *(.fini_array)
 .fini_array    0x000000000300007c        0x4 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crtbegin.o
                0x0000000003000080                __fini_array_end = ABSOLUTE (.)
                0x0000000008000844                __jcr_lma = (__fini_lma + SIZEOF (.fini_array))

.jcr            0x0000000003000080        0x0 load address 0x0000000008000844
 *(.jcr)
                0x0000000003000080                __data_end__ = ABSOLUTE (.)
                0x0000000008000844                __iwram_overlay_lma = (__jcr_lma + SIZEOF (.jcr))
                0x0000000003000080                __iwram_overlay_start = .

.iwram0         0x0000000003000080        0x0 load address 0x0000000008000844
 *(.iwram0)
                0x0000000003000080                . = ALIGN (0x4)
                0x0000000008000844                PROVIDE (__load_start_iwram0 = LOADADDR (.iwram0))
                0x0000000008000844                PROVIDE (__load_stop_iwram0 = (LOADADDR (.iwram0) + SIZEOF (.iwram0)))

.iwram1         0x0000000003000080        0x0
 *(.iwram1)
                0x0000000003000080                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_iwram1 = LOADADDR (.iwram1))
                [!provide]                        PROVIDE (__load_stop_iwram1 = (LOADADDR (.iwram1) + SIZEOF (.iwram1)))

.iwram2         0x0000000003000080        0x0
 *(.iwram2)
                0x0000000003000080                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_iwram2 = LOADADDR (.iwram2))
                [!provide]                        PROVIDE (__load_stop_iwram2 = (LOADADDR (.iwram2) + SIZEOF (.iwram2)))

.iwram3         0x0000000003000080        0x0
 *(.iwram3)
                0x0000000003000080                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_iwram3 = LOADADDR (.iwram3))
                [!provide]                        PROVIDE (__load_stop_iwram3 = (LOADADDR (.iwram3) + SIZEOF (.iwram3)))

.iwram4         0x0000000003000080        0x0
 *(.iwram4)
                0x0000000003000080                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_iwram4 = LOADADDR (.iwram4))
                [!provide]                        PROVIDE (__load_stop_iwram4 = (LOADADDR (.iwram4) + SIZEOF (.iwram4)))

.iwram5         0x0000000003000080        0x0
 *(.iwram5)
                0x0000000003000080                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_iwram5 = LOADADDR (.iwram5))
                [!provide]                        PROVIDE (__load_stop_iwram5 = (LOADADDR (.iwram5) + SIZEOF (.iwram5)))

.iwram6         0x0000000003000080        0x0
 *(.iwram6)
                0x0000000003000080                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_iwram6 = LOADADDR (.iwram6))
                [!provide]                        PROVIDE (__load_stop_iwram6 = (LOADADDR (.iwram6) + SIZEOF (.iwram6)))

.iwram7         0x0000000003000080        0x0
 *(.iwram7)
                0x0000000003000080                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_iwram7 = LOADADDR (.iwram7))
                [!provide]                        PROVIDE (__load_stop_iwram7 = (LOADADDR (.iwram7) + SIZEOF (.iwram7)))

.iwram8         0x0000000003000080        0x0
 *(.iwram8)
                0x0000000003000080                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_iwram8 = LOADADDR (.iwram8))
                [!provide]                        PROVIDE (__load_stop_iwram8 = (LOADADDR (.iwram8) + SIZEOF (.iwram8)))

.iwram9         0x0000000003000080        0x0
 *(.iwram9)
                0x0000000003000080                . = ALIGN (0x4)
                [!provide]                        PROVIDE (__load_start_iwram9 = LOADADDR (.iwram9))
                [!provide]                        PROVIDE (__load_stop_iwram9 = (LOADADDR (.iwram9) + SIZEOF (.iwram9)))
                0x0000000003000080                __iwram_overlay_end = .
                0x0000000008000844                __ewram_lma = (__iwram_overlay_lma + (__iwram_overlay_end - __iwram_overlay_start))
                0x0000000003000080                __iheap_start = .
                0x0000000002000000                __ewram_start = ORIGIN (ewram)

.ewram          0x0000000002000000        0x0 load address 0x0000000008000844
 *(.ewram*)
                0x0000000002000000                . = ALIGN (0x4)
                0x0000000002000000                __ewram_end = ABSOLUTE (.)
                0x0000000008000844                __pad_lma = (__ewram_lma + SIZEOF (.ewram))

.sbss           0x0000000002000000        0x0
                0x0000000002000000                __sbss_start__ = ABSOLUTE (.)
 *(.sbss*)
                0x0000000002000000                . = ALIGN (0x4)
                0x0000000002000000                __sbss_end__ = ABSOLUTE (.)
                0x0000000002000000                __end__ = ABSOLUTE (.)
                0x0000000002000000                __eheap_start = ABSOLUTE (.)

.pad            0x0000000002000000        0x8 load address 0x0000000008000844
                0x0000000002000000        0x4 LONG 0x52416b64
                0x0000000002000004        0x4 LONG 0x4d
                0x0000000002000008                . = ALIGN (0x4)
                0x000000000800084c                __rom_end__ = (__pad_lma + SIZEOF (.pad))

.rel.dyn        0x0000000002000008        0x0 load address 0x000000000800084c
 .rel.iplt      0x0000000002000008        0x0 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/../../../../arm-none-eabi/lib/thumb/gba_crt0.o

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x45
 *(.comment)
 .comment       0x0000000000000000       0x23 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crtbegin.o
                                         0x24 (size before relaxing)
 .comment       0x0000000000000023       0x24 main.o
 .comment       0x0000000000000023       0x22 /opt/devkitpro/libtonc/lib/libtonc.a(tonc_bmp16.o)
                                         0x23 (size before relaxing)
 .comment       0x0000000000000045       0x23 /opt/devkitpro/libtonc/lib/libtonc.a(tonc_input.o)
 .comment       0x0000000000000045       0x24 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/../../../../arm-none-eabi/lib/thumb/libg.a(lib_a-init.o)
 .comment       0x0000000000000045       0x24 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/../../../../arm-none-eabi/lib/thumb/libsysbase.a(malloc_vars.o)
 .comment       0x0000000000000045       0x24 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crtend.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x28
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x28 main.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x889
 *(.debug_info)
 .debug_info    0x0000000000000000      0x889 main.o

.debug_abbrev   0x0000000000000000      0x2b0
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x2b0 main.o

.debug_line     0x0000000000000000      0x539
 *(.debug_line)
 .debug_line    0x0000000000000000      0x539 main.o

.debug_frame    0x0000000000000000       0x94
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x94 main.o

.debug_str      0x0000000000000000      0x1fa
 *(.debug_str)
 .debug_str     0x0000000000000000      0x1fa main.o
                                        0x23a (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.stack          0x0000000000080000        0x0
                0x0000000000080000                _stack = .
 *(.stack)

.note.gnu.arm.ident
 *(.note.gnu.arm.ident)

.ARM.attributes
                0x0000000000000000       0x2c
 *(.ARM.attributes)
 .ARM.attributes
                0x0000000000000000       0x20 /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/../../../../arm-none-eabi/lib/thumb/gba_crt0.o
 .ARM.attributes
                0x0000000000000020       0x1c /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crti.o
 .ARM.attributes
                0x000000000000003c       0x2a /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crtbegin.o
 .ARM.attributes
                0x0000000000000066       0x2a main.o
 .ARM.attributes
                0x0000000000000090       0x2a /opt/devkitpro/libtonc/lib/libtonc.a(tonc_bmp16.o)
 .ARM.attributes
                0x00000000000000ba       0x2a /opt/devkitpro/libtonc/lib/libtonc.a(tonc_input.o)
 .ARM.attributes
                0x00000000000000e4       0x1a /opt/devkitpro/libtonc/lib/libtonc.a(tonc_bios.o)
 .ARM.attributes
                0x00000000000000fe       0x1a /opt/devkitpro/libtonc/lib/libtonc.a(tonc_memset.o)
 .ARM.attributes
                0x0000000000000118       0x2a /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/../../../../arm-none-eabi/lib/thumb/libg.a(lib_a-init.o)
 .ARM.attributes
                0x0000000000000142       0x2a /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/../../../../arm-none-eabi/lib/thumb/libsysbase.a(malloc_vars.o)
 .ARM.attributes
                0x000000000000016c       0x2a /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crtend.o
 .ARM.attributes
                0x0000000000000196       0x1c /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crtn.o

/DISCARD/
 *(.note.GNU-stack)
LOAD /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/../../../../arm-none-eabi/lib/thumb/gba_crt0.o
LOAD /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crti.o
LOAD /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crtbegin.o
LOAD main.o
LOAD /opt/devkitpro/libgba/lib/libmm.a
LOAD /opt/devkitpro/libtonc/lib/libtonc.a
START GROUP
LOAD /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/libgcc.a
LOAD /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/../../../../arm-none-eabi/lib/thumb/libg.a
LOAD /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/../../../../arm-none-eabi/lib/thumb/libc.a
LOAD /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/../../../../arm-none-eabi/lib/thumb/libsysbase.a
END GROUP
LOAD /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crtend.o
LOAD /opt/devkitpro/devkitARM/bin/../lib/gcc/arm-none-eabi/12.1.0/thumb/crtn.o
OUTPUT(/home/mc_ride/projects/libtonc/pong/pong.elf elf32-littlearm)
LOAD linker stubs

.debug_loclists
                0x0000000000000000      0x658
 .debug_loclists
                0x0000000000000000      0x658 main.o

.debug_rnglists
                0x0000000000000000      0x104
 .debug_rnglists
                0x0000000000000000      0x104 main.o
